/**
 * Design Tokens
 * Autogenerated from tokens.json.
 * DO NOT EDIT!
 */

export const tokens = {
  'color.base.blue.0': '#A7E2FF',
  'color.base.blue.1': '#89C4FA',
  'color.base.blue.2': '#6BA6DC',
  'color.base.gray.1': '#121212',
  'color.base.green.0': '#8AAFBA',
  'color.base.green.1': '#6C919C',
  'color.base.green.2': '#4E737E',
  'color.base.purple.0': '#F0D0FF',
  'color.base.purple.1': '#D2B2F8',
  'color.base.purple.2': '#B494DA',
  'color.base.red.0': '#FFA7A7',
  'color.base.red.1': '#FA8989',
  'color.base.red.2': '#DC6B6B',
  'color.base.white.1': '#FFFFFF',
  'color.base.yellow.0': '#FFF069',
  'color.base.yellow.1': '#F4D24B',
  'color.base.yellow.2': '#D6B42D',
  'fontStack.mono': ['DM Mono'],
  'fontStack.sansSerifDisplay': ['Tusker Grotesk'],
  'fontStack.sansSerifPrimary': ['Neue Haas Grotesk'],
  'space.large': '12px',
  'space.medium': '8px',
  'space.small': '6px',
  'space.xlarge': '16px',
  'space.xsmall': '4px',
  'space.xxsmall': '2px',
};

export const meta = {
  'color.base.blue.0': {
    _original: {
      $value: '#A7E2FF',
    },
    _group: {
      id: 'color.base.blue',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.blue.0',
    $type: 'color',
    $value: '#A7E2FF',
  },
  'color.base.blue.1': {
    _original: {
      $value: '#89C4FA',
    },
    _group: {
      id: 'color.base.blue',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.blue.1',
    $type: 'color',
    $value: '#89C4FA',
  },
  'color.base.blue.2': {
    _original: {
      $value: '#6BA6DC',
    },
    _group: {
      id: 'color.base.blue',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.blue.2',
    $type: 'color',
    $value: '#6BA6DC',
  },
  'color.base.gray.1': {
    _original: {
      $value: '#121212',
    },
    _group: {
      id: 'color.base.gray',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.gray.1',
    $type: 'color',
    $value: '#121212',
  },
  'color.base.green.0': {
    _original: {
      $value: '#8AAFBA',
    },
    _group: {
      id: 'color.base.green',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.green.0',
    $type: 'color',
    $value: '#8AAFBA',
  },
  'color.base.green.1': {
    _original: {
      $value: '#6C919C',
    },
    _group: {
      id: 'color.base.green',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.green.1',
    $type: 'color',
    $value: '#6C919C',
  },
  'color.base.green.2': {
    _original: {
      $value: '#4E737E',
    },
    _group: {
      id: 'color.base.green',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.green.2',
    $type: 'color',
    $value: '#4E737E',
  },
  'color.base.purple.0': {
    _original: {
      $value: '#F0D0FF',
    },
    _group: {
      id: 'color.base.purple',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.purple.0',
    $type: 'color',
    $value: '#F0D0FF',
  },
  'color.base.purple.1': {
    _original: {
      $value: '#D2B2F8',
    },
    _group: {
      id: 'color.base.purple',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.purple.1',
    $type: 'color',
    $value: '#D2B2F8',
  },
  'color.base.purple.2': {
    _original: {
      $value: '#B494DA',
    },
    _group: {
      id: 'color.base.purple',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.purple.2',
    $type: 'color',
    $value: '#B494DA',
  },
  'color.base.red.0': {
    _original: {
      $value: '#FFA7A7',
    },
    _group: {
      id: 'color.base.red',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.red.0',
    $type: 'color',
    $value: '#FFA7A7',
  },
  'color.base.red.1': {
    _original: {
      $value: '#FA8989',
    },
    _group: {
      id: 'color.base.red',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.red.1',
    $type: 'color',
    $value: '#FA8989',
  },
  'color.base.red.2': {
    _original: {
      $value: '#DC6B6B',
    },
    _group: {
      id: 'color.base.red',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.red.2',
    $type: 'color',
    $value: '#DC6B6B',
  },
  'color.base.white.1': {
    _original: {
      $value: '#FFFFFF',
    },
    _group: {
      id: 'color.base.white',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.white.1',
    $type: 'color',
    $value: '#FFFFFF',
  },
  'color.base.yellow.0': {
    _original: {
      $value: '#FFF069',
    },
    _group: {
      id: 'color.base.yellow',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.yellow.0',
    $type: 'color',
    $value: '#FFF069',
  },
  'color.base.yellow.1': {
    _original: {
      $value: '#F4D24B',
    },
    _group: {
      id: 'color.base.yellow',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.yellow.1',
    $type: 'color',
    $value: '#F4D24B',
  },
  'color.base.yellow.2': {
    _original: {
      $value: '#D6B42D',
    },
    _group: {
      id: 'color.base.yellow',
      $extensions: {
        requiredModes: [],
      },
      $type: 'color',
    },
    id: 'color.base.yellow.2',
    $type: 'color',
    $value: '#D6B42D',
  },
  'fontStack.mono': {
    _original: {
      $value: ['DM Mono'],
    },
    _group: {
      id: 'fontStack',
      $extensions: {
        requiredModes: [],
      },
      $type: 'fontFamily',
    },
    id: 'fontStack.mono',
    $type: 'fontFamily',
    $value: ['DM Mono'],
  },
  'fontStack.sansSerifDisplay': {
    _original: {
      $value: ['Tusker Grotesk'],
    },
    _group: {
      id: 'fontStack',
      $extensions: {
        requiredModes: [],
      },
      $type: 'fontFamily',
    },
    id: 'fontStack.sansSerifDisplay',
    $type: 'fontFamily',
    $value: ['Tusker Grotesk'],
  },
  'fontStack.sansSerifPrimary': {
    _original: {
      $value: ['Neue Haas Grotesk'],
    },
    _group: {
      id: 'fontStack',
      $extensions: {
        requiredModes: [],
      },
      $type: 'fontFamily',
    },
    id: 'fontStack.sansSerifPrimary',
    $type: 'fontFamily',
    $value: ['Neue Haas Grotesk'],
  },
  'space.large': {
    _original: {
      $value: '12px',
    },
    _group: {
      id: 'space',
      $extensions: {
        requiredModes: [],
      },
      $type: 'dimension',
    },
    id: 'space.large',
    $type: 'dimension',
    $value: '12px',
  },
  'space.medium': {
    _original: {
      $value: '8px',
    },
    _group: {
      id: 'space',
      $extensions: {
        requiredModes: [],
      },
      $type: 'dimension',
    },
    id: 'space.medium',
    $type: 'dimension',
    $value: '8px',
  },
  'space.small': {
    _original: {
      $value: '6px',
    },
    _group: {
      id: 'space',
      $extensions: {
        requiredModes: [],
      },
      $type: 'dimension',
    },
    id: 'space.small',
    $type: 'dimension',
    $value: '6px',
  },
  'space.xlarge': {
    _original: {
      $value: '16px',
    },
    _group: {
      id: 'space',
      $extensions: {
        requiredModes: [],
      },
      $type: 'dimension',
    },
    id: 'space.xlarge',
    $type: 'dimension',
    $value: '16px',
  },
  'space.xsmall': {
    _original: {
      $value: '4px',
    },
    _group: {
      id: 'space',
      $extensions: {
        requiredModes: [],
      },
      $type: 'dimension',
    },
    id: 'space.xsmall',
    $type: 'dimension',
    $value: '4px',
  },
  'space.xxsmall': {
    _original: {
      $value: '2px',
    },
    _group: {
      id: 'space',
      $extensions: {
        requiredModes: [],
      },
      $type: 'dimension',
    },
    id: 'space.xxsmall',
    $type: 'dimension',
    $value: '2px',
  },
};

export const modes = {};

/** Get individual token */
export function token(tokenID, modeName) {
  if (modeName && modes[tokenID] && modeName in modes[tokenID]) return modes[tokenID][modeName];
  return tokens[tokenID];
}
